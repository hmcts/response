version: '3'
services:
  response:
    build:
      context: .
      dockerfile: Dockerfile.response
    image: response
    container_name: response
    entrypoint: bash
    command: /app/startup.sh
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      POSTGRES: "true"
    env_file: .env
    volumes:
      - ./:/app
      - ../:/response
      - pypd:/app/pypd
    stdin_open: true
    tty: true
    networks:
      - main-internal-net

  cron:
    build:
      context: .
      dockerfile: Dockerfile.cron
    image: cron
    container_name: cron
    depends_on:
      - response
    tty: true

  db:
    image: "postgres:16.3"
    container_name: postgres
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - main-internal-net

  ngrok:
    image: ngrok/ngrok:latest
    restart: unless-stopped
    command:
      - "start"
      - "--all"
      - "--config"
      - "/etc/ngrok.yml"
    volumes:
      - ./.ngrok.yml:/etc/ngrok.yml
    networks:
      - main-internal-net
    depends_on:
      - response

volumes:
  postgres_data:
  pypd:

networks:
  main-internal-net:
    driver: bridge